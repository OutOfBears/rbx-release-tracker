[
    {
        "status": "Pending",
        "type": "Improvements",
        "content": "MicroProfiler: Adds a new category under x-ray mode that allows you to view network traffic. Before generating a dump, select a verbosity level in the MicroProfiler overlay Network menu. When viewing the dump, select Network in the X-Ray menu."
    },
    {
        "status": "Live",
        "type": "Improvements",
        "content": "Attributes and tags on instances are now stored more efficiently, decreasing memory pressure."
    },
    {
        "status": "Pending",
        "type": "Improvements",
        "content": "Improves Acoustic Simulation's diffraction pathfinding when emitters or listeners are near obstacles"
    },
    {
        "status": "Pending",
        "type": "Improvements",
        "content": "WrapDeformers can now be attached under layered clothing meshes (i.e. MeshParts that have WrapLayer children, rather than just WrapTarget children).\n\nThe difference between the WrapDeformer cage and WrapLayer outer cage will deform the mesh prior to any layered clothing fit. WrapDeformed layered clothing MeshParts can be published as they have been for WrapDeformed body part MeshParts."
    },
    {
        "status": "Pending",
        "type": "Improvements",
        "content": "Updated in-experience convex decomposition to a technique that produces better results in most cases."
    },
    {
        "status": "Pending",
        "type": "Improvements",
        "content": "Add a ViewportPosition action type to Input Action System."
    },
    {
        "status": "Pending",
        "type": "Improvements",
        "content": "Adds the `Enum.AdornShading` enum. Adds Box/Sphere/Cone/Cylinder HandleAdornment property: Shading."
    },
    {
        "status": "Pending",
        "type": "Improvements",
        "content": "Added `Hollow` property to `Class.ConeHandleAdornment`."
    },
    {
        "status": "Pending",
        "type": "Improvements",
        "content": "Adds `Class.GuiService.ViewportDisplaySize` to retrieve physical size (`Enum.DisplaySize`) of the viewport"
    },
    {
        "status": "Pending",
        "type": "Improvements",
        "content": "Beta Adaptive Reverb feature has been tweaked and improved slightly."
    },
    {
        "status": "Pending",
        "type": "Improvements",
        "content": "Improves Luauâ€™s New Type Solver's ability to recover from certain internal failure cases."
    },
    {
        "status": "Pending",
        "type": "Improvements",
        "content": "Adds `Class.SoundService.AudioPlayerVolumeFix` to rollout a fix for an issue with `Class.AudioPlayer|AudioPlayers` not playing at the correct volume."
    },
    {
        "status": "Pending",
        "type": "Improvements",
        "content": "Adds a new `VideoContent` property to `Class.VideoFrame`."
    },
    {
        "status": "Pending",
        "type": "Improvements",
        "content": "In Luau's New Type Solver, types indicative of an internal error no longer leak from modules, and instead raise a type checking error. Previously, this would result in unknown and surprising behavior across different modules."
    },
    {
        "status": "Pending",
        "type": "Improvements",
        "content": "Fixed a bug in the New Luau Type Solver that would cause type checking to fail on certain patterns of OO-styled code."
    },
    {
        "status": "Pending",
        "type": "Improvements",
        "content": "Improves the quality of Acoustic Simulation's muffling/filtering."
    },
    {
        "status": "Pending",
        "type": "Improvements",
        "content": "`game.CoreGui` and other restricted instances and services will no longer be accessible in scripts which do not have a permission to use them. Instead, attempt to index or retrieve such an instance from Roblox API method will return 'nil'."
    },
    {
        "status": "Pending",
        "type": "Improvements",
        "content": "Fix bug where UIContainerQuery doesn't work on load."
    },
    {
        "status": "Pending",
        "type": "Improvements",
        "content": "In the New Luau Type Solver, fixes an issue where a `X or Y` expression might erroneously be reported as having the wrong type when returned from a function."
    },
    {
        "status": "Pending",
        "type": "Improvements",
        "content": "ProximityPrompt indicators"
    },
    {
        "status": "Pending",
        "type": "Improvements",
        "content": "Explorer - Adjusts the scroll bar UI. Clicking in the gutter above or below the scrollbar will now scroll by a page. Click and hold to scroll by page to the mouse."
    },
    {
        "status": "Pending",
        "type": "Improvements",
        "content": "Removes the legacy \"One Stud Grid\", \"1/5 Stud Grid\" and \"Grid Off\" actions in Studio.\n\nA replacement community plugin is available here for creators who still want similar functionality: https://create.roblox.com/store/asset/133502991066075/Grid-Snap-Quick-Switcher"
    },
    {
        "status": "Pending",
        "type": "Fixes",
        "content": "Provide richer autofill suggestions inside of interpolated strings when using incremental autocomplete"
    },
    {
        "status": "Pending",
        "type": "Fixes",
        "content": "Reduces the amount of time spent per-frame in the `Sound` task when there are many Audio instances."
    },
    {
        "status": "Pending",
        "type": "Fixes",
        "content": "Fixes an issue that could cause the jump button to become deactivated when changing the humanoid's `JumpPower`. Players would have to release and press the jump button again to reactivate jumping."
    },
    {
        "status": "Pending",
        "type": "Fixes",
        "content": "Checked function errors in the new Luau Type Solver will warn about erroneous argument usage using 1-indexed positions for the arguments instead of 0-indexed positions"
    },
    {
        "status": "Pending",
        "type": "Fixes",
        "content": "Fixed crashes when calling SharedTable:Clone."
    },
    {
        "status": "Pending",
        "type": "Fixes",
        "content": "Fixes a bug that prevented incremental autocomplete from providing results in for loops."
    },
    {
        "status": "Pending",
        "type": "Fixes",
        "content": "Update the types of UserInputService's `GetGamepadState`, `GetKeysPressed`, and `GetMouseButtonsPressed` APIs to return a list of `Class.InputObject|InputObjects`."
    },
    {
        "status": "Pending",
        "type": "Fixes",
        "content": "Tag Editor now reinstantiates its folder in ServerStorage upon adding new tags. It will now find folders not managed by the plugin if the TagList folder hasn't already been created, so that it can be used with workflows like Rojo."
    },
    {
        "status": "Pending",
        "type": "Fixes",
        "content": "Improve search performance in the Explorer. Broad searches like \"is:BasePart\" will lag less and specific searches like \"MySpecificModel\" will complete faster.\r\n\r\nFix a bug where using Studio with FPS set to 240Hz could cause hangs greater than a second when searching in the Explorer."
    },
    {
        "status": "Pending",
        "type": "Fixes",
        "content": "Addresses a crash from using the constraint scale slider in the Visualization Modes panel on some Windows machines."
    }
]